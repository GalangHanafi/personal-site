---
interface Props {
  isMobile?: boolean;
}

const { isMobile = false } = Astro.props;
---

<form id=`${isMobile ? "mobileSearchForm" : "searchForm"}`>
  <input
    id=`${isMobile ? "mobileSearchInput" : "searchInput"}`
    type="text"
    placeholder="🔍 Search"
    required
    class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    name="search"
  />
</form>

{
  (isMobile) && (
    <script is:inline>
      var mobileSearchForm = document.getElementById("mobileSearchForm");
      var mobileSearchInput = document.getElementById("mobileSearchInput");

      if (window.location.pathname === "/search") {
        let searchParams = new URLSearchParams(window.location.search);
        let qParam = searchParams.get("q");

        mobileSearchInput.value = qParam;
      }

      mobileSearchForm.addEventListener("submit", (e) => {
        e.preventDefault();
        window.location.href = `${window.location.origin}/search?q=${mobileSearchInput.value}`;
      });
    </script>
  )
}
{
  (!isMobile) &&(
  <script is:inline>
    var searchForm = document.getElementById("searchForm");
    var searchInput = document.getElementById("searchInput");

    if (window.location.pathname === "/search") {
      let searchParams = new URLSearchParams(window.location.search);
      let qParam = searchParams.get("q");

      searchInput.value = qParam;
    }

    searchForm.addEventListener("submit", (e) => {
      e.preventDefault();
      window.location.href = `${window.location.origin}/search?q=${searchInput.value}`;
    });
  </script>)
}

